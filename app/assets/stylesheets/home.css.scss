// Place all the styles related to the home controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/

@import 'library';

// This is used to prevent field borders from touching each other or
// the content they enclose.  Note the use of pixels; using em or rem 
// can cause rounding errors which can result in gaps appearing to be of
// different sizes.
$border-margin: 1px;

// This is used to provide a little space at the start and end of a field 
// so that the user has a reasonable target area if they want to move the 
// cursor there by clicking with the mouse.  Note the use of rem so that
// the gap is always the same, regardless of the font size.
$mouse-target-margin: 0.7rem;


section.home-page {
  margin-top: 3em;
  margin-bottom: 3em;
  text-align: center;
  
  // 'sign in' and 'sign up' links when no-one is signed in.
  nav {
    margin-top: 2em;
    
    a {
      margin-left: 1em;
      margin-right: 1em;
    }
  }
}


.view-mode {
  // Specify a transparent border so that the element does not change
  // size when we make the border visible in edit mode.
  border: 1px solid transparent;
}


.edit-mode {
  // Place an unobtrusive border around items that the user can edit
  // when they are in edit mode.
  border: 1px solid #ddd;
  
  // Not sure about this yet.
  // background-color: rgba(187, 221, 221, 0.15); // #bdd
}


section {
  // Resets.  Do this inside of section so that these value do not get overridden 
  // by stylesheets loaded after this one (I'm looking at you scaffolds.css).
  // TODO: can we do this somewhere globally? How about just retiring scaffolds.css?
  p, h1, h2, ol, ul, li, td {
    line-height: normal;
    margin: 0;
    padding: 0;
  }

  // Left and right page margins.
  margin-left: 2em;
  margin-right: 2em;
  
  // Vertical space between margins to make them stand out.
  margin-top: 4em;
  margin-bottom: 4em;
  
  text-align: center;
}


section.user-info {
  h1, h2 {
    // Do not make the name or profession too strong (debatable though).
    font-weight: normal;

    // In edit mode, allow the border to grow/shrink to fit the content.
    width: -moz-fit-content;
    width: -webkit-fit-content;
    width: fit-content;

    // Some space between fields so that their borders do not collide in edit mode.
    // Width of self and parent not known so use margin auto to center self.
    margin: $border-margin auto;
    
    // Allow a border margin above and below so that the border does not collide
    // with the lettering of the content.  Allow a mouse target margin at each 
    // end of the field.
    padding: $border-margin $mouse-target-margin;    // t&b l&r
  
    &.hidden {
      display: none;
    }
  }

  h1 {
    font-size: 3em;
  }

  h2 {
    font-size: 1.2em;
  }
}


section.user-highlights {
  table {
    // Force the table to be the width of its parent.
    width: 100%;
  }

  td {
    // Space between rows.
    padding-bottom: 0.5em;

    vertical-align: middle;
  }

  tr:last-child td {
    // No space after last row.
    padding-bottom: 0;      
  }

  td.left-column {
    width: 35%;
  }
  
  td.right-column {
    text-align: left;
  }
  
  p {
    // In edit mode, allow the border to grow/shrink to fit the content.
    width: -moz-fit-content;
    width: -webkit-fit-content;
    width: fit-content;
    
    // Some space between fields so that their borders do not collide in edit mode.
    margin: $border-margin;
    
    // Allow a border margin above and below so that the border does not collide
    // with the lettering of the content.  Allow a mouse target margin at each 
    // end of the field.
    padding: $border-margin $mouse-target-margin;    // t&b l&r  
  }

  p.highlight-name {
    // Large and dim look.
    color: #ccc;
    font-size: 1.5rem;

    // Width of self and parent not known so use margin-left auto to right justify self.
    // BUT: when the content spans multiple lines, we need text-align right on self to
    // justify it.
    margin-left: auto;
    text-align: right;
    
    // We want the gap between the left column and right column fields to $border-margin
    // but because they are in two different td cells they do not collapes (is this true?),
    // so here we remove the right margin from the left column.
    margin-right: 0;
  }
}


section.user-jobs {
  table {
    // Force the table to be the width of its parent.
    width: 100%;
  }

  td {
    // Space between rows.
    padding-bottom: 3em;

    vertical-align: top;
  }

  tr:last-child td {
    // No space after last row.
    padding-bottom: 0;      
  }

  td.left-column {
    text-align: center;
    width: 40%;
  }

  td.right-column {
    text-align: left;
  }

  p {
    // In edit mode, allow the border to grow/shrink to fit the content.
    width: -moz-fit-content;
    width: -webkit-fit-content;
    width: fit-content;
    
    // Some space between fields so that their borders do not collide in edit mode.
    // Width of self and parent not known so use margin auto to center self.
    margin: $border-margin auto;
    
    // Allow a border margin above and below so that the border does not collide
    // with the lettering of the content.  Allow a mouse target margin at each 
    // end of the field.
    padding: $border-margin $mouse-target-margin;    // t&b l&r  
  }
  
  p:last-child {
    // No space after the last child (separating space, not delimiting space).
    margin-bottom: 0;
  }

  p.company {
    font-weight: bold;
  }

  ul {
    // In edit mode, allow the border to grow/shrink to fit the content.
    // TODO: use utility that generates -moz- and -webkit- prefixes
    width: -moz-fit-content;
    width: -webkit-fit-content;
    width: fit-content;
    
    // Some space between fields so that their borders do not collide in edit mode.
    margin: $border-margin;
    
    // Allow a border margin above and below so that the border does not collide
    // with the lettering of the content.  Allow a mouse target margin at each 
    // end of the field.
    padding: $border-margin $mouse-target-margin;    // t&b l&r  

    list-style-type: disc;
  }

  li {
    // Allow some space for the bullets and add some space between items.
    margin-left: 1em;
    margin-bottom: 0.3em;
  
    text-align: left;
  }

  li:last-child {
    // No spacing after last item.
    margin-bottom: 0;
  }
}
